using System;
using System.Collections.Generic;
using System.Linq;

class Produto
{
    public string Descricao { get; set; }
    public decimal Valor { get; set; }
}

class Program
{
    static List<Produto> produtos = new List<Produto>();

    static void Main()
    {
        while (true)
        {
            Console.WriteLine("\nMenu:");
            Console.WriteLine("1 - Cadastrar produto");
            Console.WriteLine("2 - Remover produto");
            Console.WriteLine("3 - Pesquisar produto");
            Console.WriteLine("4 - Mostrar produto com menor valor");
            Console.WriteLine("5 - Sair");
            Console.Write("Escolha uma opção: ");
            string opcao = Console.ReadLine();

            switch (opcao)
            {
                case "1":
                    CadastrarProduto();
                    break;
                case "2":
                    RemoverProduto();
                    break;
                case "3":
                    PesquisarProduto();
                    break;
                case "4":
                    MostrarProdutoMenorValor();
                    break;
                case "5":
                    return;
                default:
                    Console.WriteLine("Opção inválida.");
                    break;
            }
        }
    }

    static void CadastrarProduto()
    {
        Console.Write("Descrição: ");
        string descricao = Console.ReadLine();
        Console.Write("Valor: ");
        if (decimal.TryParse(Console.ReadLine(), out decimal valor))
        {
            produtos.Add(new Produto { Descricao = descricao, Valor = valor });
            Console.WriteLine("Produto cadastrado.");
        }
        else
        {
            Console.WriteLine("Valor inválido.");
        }
    }

    static void RemoverProduto()
    {
        Console.Write("Descrição do produto a remover: ");
        string descricao = Console.ReadLine();
        var produto = produtos.Find(p => p.Descricao.Equals(descricao, StringComparison.OrdinalIgnoreCase));
        if (produto != null)
        {
            produtos.Remove(produto);
            Console.WriteLine("Produto removido.");
        }
        else
        {
            Console.WriteLine("Produto não encontrado.");
        }
    }

    static void PesquisarProduto()
    {
        Console.Write("Descrição do produto a pesquisar: ");
        string descricao = Console.ReadLine();
        var produto = produtos.Find(p => p.Descricao.Equals(descricao, StringComparison.OrdinalIgnoreCase));
        if (produto != null)
        {
            Console.WriteLine($"Descrição: {produto.Descricao}, Valor: {produto.Valor:C}");
        }
        else
        {
            Console.WriteLine("Produto não encontrado.");
        }
    }

    static void MostrarProdutoMenorValor()
    {
        if (produtos.Count == 0)
        {
            Console.WriteLine("Nenhum produto cadastrado.");
            return;
        }
        var menor = produtos.OrderBy(p => p.Valor).First();
        Console.WriteLine($"Produto com menor valor: {menor.Descricao}, Valor: {menor.Valor:C}");
    }
}
